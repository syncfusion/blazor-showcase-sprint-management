<SfKanban @ref="KanbanRef" KeyField="Status" DataSource="@KanbanData.ToList()">
    <KanbanColumns>
        @foreach (Syncfusion.Blazor.Kanban.ColumnModel item in columnData)
        {
            <KanbanColumn HeaderText="@item.HeaderText" KeyField="@item.KeyField" AllowToggle="@item.AllowToggle">
                <Template>
                    @{
                        KanbanColumn column = (KanbanColumn)context;
                        <div class="header-template-wrap">
                            <div class="header-icon e-icons @column.KeyField[0]"></div>
                            <div class="header-text">@column.HeaderText</div>
                        </div>
                    }
                </Template>
            </KanbanColumn>
        }
    </KanbanColumns>
    <KanbanEvents TValue="SprintManagmentModel.TaskInfoModel" DialogClose="@DialogCloseHandler" ActionComplete="@ActionCompleteHandler" DragStop="@DragStopHandler"></KanbanEvents>
    <KanbanCardSettings HeaderField="Id" ContentField="Subject" GrabberField="Color">
        <Template>
            @{
                SprintManagmentModel.TaskInfoModel data = (SprintManagmentModel.TaskInfoModel)context;
                <div class="card-template">
                    <div class="e-card-header">
                        <div class="e-card-header-caption">
                            <div class="e-card-header-title e-tooltip-text">@data.Assignee</div>
                        </div>
                    </div>
                    <div class="e-card-content e-tooltip-text">
                        <div class="e-text">@data.Subject</div>
                    </div>
                    @if (data.Progress != 0 && data.Progress < 100)
                    {
                        <div class="e-progress-bar-container" style="padding-left: 16px;">
                            <div classname="e-progress-bar" style="width:@data.Progress%;background: rgba(173, 216, 230);height: 5px">
                            </div>
                            <div classname="e-progress-bar-text">
                                @data.Progress%
                            </div>
                        </div>
                    }
                    <div class="e-card-footer" style="width:100%">
                        <div class="e-card-tags" style="padding:0">
                            @foreach(var item in data.Tags)
                            {
                                switch(item)
                                {
                                    case "Bug":
                                        backgroundColor = "#FF9D9D";
                                        Color = "#822626";
                                        break;
                                    case "Customer Task":
                                        backgroundColor = "#D5EBF9";
                                        Color = "#005F9C";
                                        break;
                                    case "Internal Request":
                                        backgroundColor = "#E5E7EB";
                                        Color = "#515151";
                                        break;
                                    case "Release Bug":
                                        backgroundColor = "#FBECD3";
                                        Color = "#8B5700";
                                        break;
                                    case "Breaking Issue":
                                        backgroundColor = "#FDDEDD";
                                        Color = "#AA0808";
                                        break;
                                    default:
                                        backgroundColor = "#ffffff";
                                        break;
                                }
                                <div class="e-card-tag e-card-label" style="background-color:@backgroundColor ; color: @Color;">@item</div>
                            }
                        </div>
                        <div class="e-card-footer @data.ClassName"></div>
                    </div>
                </div>
            }
        </Template>
    </KanbanCardSettings>
    <KanbanDialogSettings>
        <Template>
            @{
                SprintManagmentModel.TaskInfoModel data = (SprintManagmentModel.TaskInfoModel)context;
                <table>
                    <tbody>
                        <tr>
                            <td class="e-label">ID</td>
                            <td>
                                <SfTextBox CssClass="e-field" Value="@data.Id.ToString()" Enabled="false" />
                            </td>
                        </tr>
                        <tr>
                            <td class="e-label">Summary</td>
                            <td>
                                <SfTextBox @ref="SummaryRef" CssClass="e-field" Multiline="true" @bind-Value="@data.Subject" />
                            </td>
                        </tr>
                        <tr>
                            <td class="e-label">Start Time</td>
                            <td>
                                <SfDateTimePicker @ref="StartTimeRef"  TValue="DateTime?" @bind-Value="@data.StartTime" ></SfDateTimePicker>
                            </td>
                        </tr>
                        <tr>
                            <td class="e-label">End Time</td>
                            <td>
                                <SfDateTimePicker @ref="EndTimeRef" TValue="DateTime?" @bind-Value="@data.EndTime" ></SfDateTimePicker>
                            </td>
                        </tr>
                        <tr>
                            <td class="e-label">Priority</td>
                            <td>
                                <SfDropDownList @ref="PriorityRef" TValue="string" TItem="DropDownModel" CssClass="e-field" DataSource="@PriorityData" @bind-Value="@data.Priority">
                                    <DropDownListFieldSettings Text="Value" Value="Value" />
                                </SfDropDownList>
                            </td>
                        </tr>
                        <tr>
                            <td class="e-label">Progress</td>
                            <td>
                                <SfNumericTextBox TValue="int" @ref="ProgressRef" CssClass="e-field" @bind-Value="@data.Progress">
                                    <NumericTextBoxEvents ValueChange="NumericValueChanged" TValue="int">
                                    </NumericTextBoxEvents>
                                </SfNumericTextBox>
                                @if (IsStatusChanged && data.Status == "Done" && data.Progress != 100)
                                {
                                    <p class="text-danger" style="margin-bottom:0;">Progress must be 100</p>
                                    IsStatusChanged = false;
                                }
                                else if (IsStatusChanged && data.Status != "Done" && data.Progress == 100)
                                {
                                    <p class="text-danger" style="margin-bottom:0;">Progress not must be 100</p>
                                    IsStatusChanged = false;
                                }
                                else if (IsStatusChanged && data.Status == "Open" && data.Progress != 0)
                                {
                                    <p class="text-danger" style="margin-bottom:0;">Progress must be 0</p>
                                    IsStatusChanged = false;
                                }
                                else if (IsStatusChanged && data.Status != "Open" && data.Progress == 0)
                                {
                                    <p class="text-danger" style="margin-bottom:0;">Progress not must be 0</p>
                                    IsStatusChanged = false;
                                }
                            </td>
                        </tr>
                        <tr>
                            <td class="e-label">Status</td>
                            <td>
                                <SfDropDownList @ref="StatusRef" TValue="string" TItem="DropDownModel" CssClass="e-field" DataSource="@StatusData" @bind-Value="@data.Status">
                                    <DropDownListFieldSettings Text="Value" Value="Value" />
                                    <DropDownListEvents ValueChange="StatusValueChanged" TValue="string" TItem="DropDownModel"></DropDownListEvents>
                                </SfDropDownList>
                                @if (IsProgressChanged && data.Progress == 100 && data.Status != "Done")
                                {
                                    <p class="text-danger" style="margin-bottom:0;">Status must be Done</p>
                                    IsProgressChanged = false;
                                }
                                else if (IsProgressChanged && data.Status == "Done" && data.Progress != 100)
                                {
                                    <p class="text-danger" style="margin-bottom:0;">Status not must be Done</p>
                                    IsProgressChanged = false;
                                }
                                else if (IsProgressChanged && data.Progress == 0 && data.Status != "Open")
                                {
                                    <p class="text-danger" style="margin-bottom:0;">Status must be Open</p>
                                    IsProgressChanged = false;
                                }
                                else if (IsProgressChanged && data.Progress != 0 && data.Status == "Open")
                                {
                                    <p class="text-danger" style="margin-bottom:0;">Status not must be Open</p>
                                    IsProgressChanged = false;
                                }
                            </td>
                        </tr>
                        <tr>
                            <td class="e-label">Assignee</td>
                            <td>
                                <SfDropDownList @ref="AssigneeRef" TValue="string" TItem="DropDownModel" CssClass="e-field" DataSource="@AssigneeData" @bind-Value="@data.Assignee">
                                    <DropDownListFieldSettings Text="Value" Value="Value" />
                                </SfDropDownList>
                            </td>
                        </tr>


                    </tbody>
                </table>
            }
        </Template>
    </KanbanDialogSettings>
    <KanbanSwimlaneSettings KeyField="Assignee" >
    </KanbanSwimlaneSettings>
</SfKanban>
<style>
    .e-kanban {
    height: 100% !important;
    max-height: 100% !important;
    width: 100% !important;
    overflow-y: auto;
    }
    .e-item-count{
    display:none;
    }

    .e-kanban .header-template-wrap {
    display: inline-flex;
    font-size: 15px;
    font-weight: 500;
    }

    .e-kanban .header-template-wrap .header-icon {
    font-family: 'Kanban priority icons';
    margin-top: 3px;
    width: 10%;
    }

    .e-kanban .header-template-wrap .header-text {
    margin-left: 15px;
    font-family: 'Inter' !important;
    }

    .e-kanban.e-rtl .header-template-wrap .header-text {
    margin-right: 15px;
    }

    .e-kanban .Open::before {
    content: '\e700';
    color: #0251cc;
    font-size: 16px;
    }

    .e-kanban .In.Progress::before {
    content: '\e703';
    color: #ea9713;
    font-size: 16px;
    }

    .e-kanban .Testing::before {
    content: '\e701';
    color: #8e4399;
    font-size: 16px;
    }

    .e-kanban .Done::before {
    content: '\e702';
    color: #63ba3c;
    font-size: 16px;
    }

    @@font-face {
    font-family: 'Kanban priority icons';
    src: url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
    font-weight: normal;
    font-style: normal;
    }

    [class^="sf-icon-"],
    [class*=" sf-icon-"] {
    font-family: 'Kanban priority icons' !important;
    speak: none;
    font-size: 55px;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    }
    .e-kanban .e-card .e-card-footer .e-martintamer {
    background-image: url(https://ej2.syncfusion.com/demos/src/kanban/images/Andrew%20Fuller.png);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    position: absolute;
    width: 30px;
    height: 30px;
    right: 12px;
    bottom: 10px;
    }

    .e-kanban .e-card .e-card-footer  .e-fullerking {
    background-image: url(https://ej2.syncfusion.com/demos/src/kanban/images/Robert%20King.png);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    position: absolute;
    width: 30px;
    height: 30px;
    right: 12px;
    bottom: 10px;
    }

    .e-kanban .e-card .e-card-footer .e-rosefuller {
    background-image: url(https://ej2.syncfusion.com/demos/src/kanban/images/Steven%20walker.png);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    position: absolute;
    width: 30px;
    height: 30px;
    right: 12px;
    bottom: 10px;
    }

    .e-kanban .e-card .e-card-footer .e-margaretbuchanan {
    background-image: url(https://ej2.syncfusion.com/demos/src/kanban/images/Michael%20Suyama.png);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    position: absolute;
    width: 30px;
    height: 30px;
    right: 12px;
    bottom: 10px;
    }

    .e-kanban .e-card .e-card-footer .e-davoliofuller {
    background-image: url(https://ej2.syncfusion.com/demos/src/gantt/images/Davolio%20Fuller.png);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    position: absolute;
    width: 30px;
    height: 30px;
    right: 12px;
    bottom: 10px;
    }

    .e-swimlane-row-collapse:focus,
    .e-swimlane-row-expand:focus,
    .e-swimlane-row-collapse:hover,
    .e-swimlane-row-expand:hover {
    display: flex;
    justify-content: center;
    align-items: center;
    }

    .e-swimlane-row-expand:hover,
    .e-swimlane-row-collapse:hover {
    box-shadow: 0 0 0 4px rgba(130, 138, 145, 0.3) !important;
    }
</style>

@code {
    SfKanban<SprintManagmentModel.TaskInfoModel> KanbanRef { get; set; }
    [Parameter]
    public List<SprintManagmentModel.TaskInfoModel> KanbanData { get; set; }
    [Parameter]
    public List<SprintManagmentModel.AssignmentModel>? AssignmentCollection { get; set; }
    [Parameter]
    public EventCallback<SprintManagmentModel.SprintModel> onKanbanDataSourceChange { get; set; }
    SfDropDownList<string, DropDownModel> StatusRef;
    SfDropDownList<string, DropDownModel> AssigneeRef;
    SfDropDownList<string, DropDownModel> PriorityRef;
    SfTextBox SummaryRef;
    SfNumericTextBox<int> ProgressRef;
    SfDateTimePicker<DateTime?> StartTimeRef;
    SfDateTimePicker<DateTime?> EndTimeRef;
    [Inject]
    SyncfusionBlazorService SyncfusionService { get; set; }
    bool IsProgressChanged { get; set; } = false;
    bool IsStatusChanged { get; set; } = false;
    string backgroundColor { get; set; } = string.Empty;
    string Color { get; set; } = string.Empty;
    private List<Syncfusion.Blazor.Kanban.ColumnModel> columnData = new List<Syncfusion.Blazor.Kanban.ColumnModel>()
    {
        new Syncfusion.Blazor.Kanban.ColumnModel(){ HeaderText= "To Do", KeyField= new List<string>() { "Open" } },
        new Syncfusion.Blazor.Kanban.ColumnModel(){ HeaderText= "In Progress", KeyField= new List<string>() { "In Progress" } },
        new Syncfusion.Blazor.Kanban.ColumnModel(){ HeaderText= "Testing", KeyField= new List<string>() { "Testing" } },
        new Syncfusion.Blazor.Kanban.ColumnModel(){ HeaderText= "Done", KeyField=new List<string>() { "Done" } }
    };
    public class DropDownModel
    {
        public int Id { get; set; }
        public string Value { get; set; }
    }
    private List<DropDownModel> StatusData = new List<DropDownModel>() {
        new DropDownModel { Id = 0, Value = "Open" },
        new DropDownModel { Id = 1, Value = "In Progress" },
        new DropDownModel { Id = 2, Value = "Testing" },
        new DropDownModel { Id = 3, Value = "Done" }
    };
    private List<DropDownModel> AssigneeData = new List<DropDownModel>() {
        new DropDownModel { Id = 0, Value = "Martin Tamer" },
        new DropDownModel { Id = 1, Value = "Rose Fuller" },
        new DropDownModel { Id = 2, Value = "Margaret Buchanan" },
        new DropDownModel { Id = 3, Value = "Fuller King" },
        new DropDownModel { Id = 4, Value = "Davolio Fuller" },
    };
    private List<DropDownModel> PriorityData = new List<DropDownModel>() {
        new DropDownModel { Id = 0, Value = "Low" },
        new DropDownModel { Id = 1, Value = "Normal" },
        new DropDownModel { Id = 2, Value = "Critical" },
        new DropDownModel { Id = 3, Value = "High" }
    };
    private void NumericValueChanged(Syncfusion.Blazor.Inputs.ChangeEventArgs<int> args)
    {
        IsProgressChanged = true;
    }
    private void StatusValueChanged(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, DropDownModel> args)
    {
        IsStatusChanged = true;
    }
    public void DialogCloseHandler(DialogCloseEventArgs<SprintManagmentModel.TaskInfoModel> args)
    {
        if (args.Data != null)
        {
            if (args.Data.Progress > 100 || (args.Data.Progress < 100 && args.Data.Status == "Done"))
            {
                args.Data.Progress = 100;
            }
            if (args.Data.Progress == 100)
            {
                args.Data.Status = "Done";
            }
            if (args.Data.Progress == 0 && args.Data.Status != "Open")
            {
                args.Data.Status = "Open";
            }

            switch (args.Data.Assignee)
            {
                case "Martin Tamer":
                    args.Data.ClassName = "e-martintamer";
                    break;
                case "Rose Fuller":
                    args.Data.ClassName = "e-rosefuller";
                    break;
                case "Margaret Buchanan":
                    args.Data.ClassName = "e-margaretbuchanan";
                    break;
                case "Fuller King":
                    args.Data.ClassName = "e-fullerking";
                    break;
                case "Davolio Fuller":
                    args.Data.ClassName = "e-davoliofuller";
                    break;
            }
            foreach(var resource in SprintManagmentModel.ResourcesCollection)
            {
                if(resource.ResourceName == args.Data.Assignee)
                {
                    SprintManagmentModel.AssignmentModel assignmentRecord = AssignmentCollection.FirstOrDefault(s => s.TaskId == args.Data.Id);
                    if(assignmentRecord != null)
                    {
                        assignmentRecord.ResourceId = resource.ResourceId;
                    }
                }
            }
        }
    }
    public void DragStopHandler(Syncfusion.Blazor.Kanban.DragEventArgs<SprintManagmentModel.TaskInfoModel> args)
    {
        var data = args.Data[0];
        if (data != null)
        {
            switch (data.Status)
            {
                case "Done":
                    data.Progress = 100;
                    break;
                case "Open":
                    data.Progress = 0;
                    break;
                case "Testing":
                    data.Progress = 90;
                    break;
            }
        }
    }
    public void ActionCompleteHandler(Syncfusion.Blazor.Kanban.ActionEventArgs<SprintManagmentModel.TaskInfoModel> args)
    {
        if (args.RequestType == "cardRemove" && args.DeletedRecords != null && args.DeletedRecords.Any())
        {
            foreach(var record in args.DeletedRecords)
            {
                var deleteRecord = KanbanData.FirstOrDefault(s => s.Id == record.Id);
                if(deleteRecord != null){
                    KanbanData.Remove(deleteRecord);
                    switch (SprintManagmentModel.ChangeValue)
                    {
                        case "Project 1":
                            SprintManagmentModel.PreviousData[1].Remove(deleteRecord);
                            break;
                        case "Project 2":
                            SprintManagmentModel.PreviousData[2].Remove(deleteRecord);
                            break;
                        case "Project 3":
                            SprintManagmentModel.PreviousData[3].Remove(deleteRecord);
                            break;
                    }
                }
            }
        }
        var projectCollection = new SprintManagmentModel.SprintModel { ProjectCollection = KanbanData, ResourceAssignmentCollection = AssignmentCollection };
        onKanbanDataSourceChange.InvokeAsync(projectCollection);
    }
}
